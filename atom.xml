<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>terrancy`s blog</title>
  <subtitle>放慢了步伐,只为跑得更远~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.terrancy.com/"/>
  <updated>2019-01-09T01:04:51.392Z</updated>
  <id>http://blog.terrancy.com/</id>
  
  <author>
    <name>terrancy</name>
    <email>terrancy@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Laravel5系列入门教程之二</title>
    <link href="http://blog.terrancy.com/2019/01/08/the-third-part-service-applied-in-the-laravel/"/>
    <id>http://blog.terrancy.com/2019/01/08/the-third-part-service-applied-in-the-laravel/</id>
    <published>2019-01-08T10:17:44.000Z</published>
    <updated>2019-01-09T01:04:51.392Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;关于在laravel中的第三方服务的配置与使用&lt;/p&gt;
</content>
    
    <summary type="html">
    
      关于在laravel中的第三方服务的配置与使用
    
    </summary>
    
      <category term="php" scheme="http://blog.terrancy.com/categories/php/"/>
    
    
      <category term="php" scheme="http://blog.terrancy.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>跑步伤痛与恢复</title>
    <link href="http://blog.terrancy.com/2019/01/03/the-exprience-about-running-pain/"/>
    <id>http://blog.terrancy.com/2019/01/03/the-exprience-about-running-pain/</id>
    <published>2019-01-03T01:31:19.000Z</published>
    <updated>2019-01-29T07:35:09.373Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;之前经常跑步,由于不太重视跑前热身.跑步跑久了就积累了很多的伤病,导致现在都没法正常的训练.很多放在家门口的赛事都没能如愿参加拿牌.&lt;/p&gt;
&lt;h2 id=&quot;胫骨前肌&quot;&gt;&lt;a href=&quot;#胫骨前肌&quot; class=&quot;headerlink&quot; title=&quot;胫骨前肌&quot;&gt;&lt;/a&gt;胫骨前肌&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;其实,有伤病是正常的事情.关键是如何正视它并及时纠正.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sohu.com/a/150469205_400759&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;跑后脚背痛，原因何在？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30724167&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;小腿外侧痛，跑者必经之路？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/21814918&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;快走或者跑步之后小腿前方外侧肌肉僵硬 走路都困难 这是为什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.don1don.com/archives/64798&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;调整你的胫前肌痛── 跑步慢性疾病&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      之前经常跑步,由于不太重视跑前热身.跑步跑久了就积累了很多的伤病,导致现在都没法正常的训练.很多放在家门口的赛事都没能如愿参加拿牌.
    
    </summary>
    
      <category term="sport" scheme="http://blog.terrancy.com/categories/sport/"/>
    
    
      <category term="running" scheme="http://blog.terrancy.com/tags/running/"/>
    
  </entry>
  
  <entry>
    <title>JWT的使用详解</title>
    <link href="http://blog.terrancy.com/2018/12/29/the-full-use-of-jwt/"/>
    <id>http://blog.terrancy.com/2018/12/29/the-full-use-of-jwt/</id>
    <published>2018-12-29T01:49:54.000Z</published>
    <updated>2018-12-29T02:01:53.484Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;随着开发中对JWT的理解逐步加深,单独整理个文档方便理清思路.在不同的应用场景对JWT的理解也不一样.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      随着开发中对JWT的理解逐步加深,单独整理个文档方便理清思路.在不同的应用场景对JWT的理解也不一样.
    
    </summary>
    
      <category term="API" scheme="http://blog.terrancy.com/categories/API/"/>
    
    
      <category term="php" scheme="http://blog.terrancy.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Dingo-Api 开发总结</title>
    <link href="http://blog.terrancy.com/2018/12/19/the-docs-about-dingo-api/"/>
    <id>http://blog.terrancy.com/2018/12/19/the-docs-about-dingo-api/</id>
    <published>2018-12-19T01:50:49.000Z</published>
    <updated>2018-12-29T02:01:54.806Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;工作中使用Laravel框架开发平台,接触到api设计与开发.顺便将在Dingo-Api的理解整理与总结下来.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      工作中使用Laravel框架开发平台,接触到api设计与开发.顺便将在Dingo-Api的理解整理与总结下来.
    
    </summary>
    
      <category term="Laravel" scheme="http://blog.terrancy.com/categories/Laravel/"/>
    
    
      <category term="php" scheme="http://blog.terrancy.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序常用的第三方框架的整理</title>
    <link href="http://blog.terrancy.com/2018/11/29/the-common-third-part-framework-about-wechat-mini-program/"/>
    <id>http://blog.terrancy.com/2018/11/29/the-common-third-part-framework-about-wechat-mini-program/</id>
    <published>2018-11-29T09:52:00.000Z</published>
    <updated>2018-12-26T09:56:26.112Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
      开始入手微信小程序的时候,通常使用的是原生框架来写.
    
    </summary>
    
      <category term="php" scheme="http://blog.terrancy.com/categories/php/"/>
    
    
      <category term="php" scheme="http://blog.terrancy.com/tags/php/"/>
    
      <category term="wechat" scheme="http://blog.terrancy.com/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序支付相关教程</title>
    <link href="http://blog.terrancy.com/2018/11/26/the-payment-about-wechat-mini-program/"/>
    <id>http://blog.terrancy.com/2018/11/26/the-payment-about-wechat-mini-program/</id>
    <published>2018-11-26T09:37:18.000Z</published>
    <updated>2018-12-26T09:48:12.752Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
      根据平时在写小程序的业务,对微信小程序支付相关教程的整理与总结
    
    </summary>
    
      <category term="php" scheme="http://blog.terrancy.com/categories/php/"/>
    
    
      <category term="php" scheme="http://blog.terrancy.com/tags/php/"/>
    
      <category term="wechat" scheme="http://blog.terrancy.com/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序常用的第三方SDK的整理与总结</title>
    <link href="http://blog.terrancy.com/2018/11/16/the-common-third-part-sdk-about-wechat-mini-program/"/>
    <id>http://blog.terrancy.com/2018/11/16/the-common-third-part-sdk-about-wechat-mini-program/</id>
    <published>2018-11-16T09:39:28.000Z</published>
    <updated>2018-12-26T09:48:15.831Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
      根据平时在写小程序的业务,对微信小程序常用的第三方SDK的整理与总结
    
    </summary>
    
      <category term="php" scheme="http://blog.terrancy.com/categories/php/"/>
    
    
      <category term="php" scheme="http://blog.terrancy.com/tags/php/"/>
    
      <category term="wechat" scheme="http://blog.terrancy.com/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>谷歌支付验证解决方案</title>
    <link href="http://blog.terrancy.com/2018/10/17/Google-payment-solutions/"/>
    <id>http://blog.terrancy.com/2018/10/17/Google-payment-solutions/</id>
    <published>2018-10-17T12:21:27.000Z</published>
    <updated>2018-10-17T12:37:33.931Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;关于谷歌支付验证部分,服务端有多种不同语言的SDK.但就PHP版本是Beta版本的,网上关于使用方式讲解并不全面.&lt;/p&gt;
&lt;p&gt;之前对接中东版本时有完整做过一遍,可惜没有记录下来.如今也只能依稀记得一些流程,幸好有机会借到谷歌开发者后台的超级管理员账号,有机会全面了解谷歌后台的所有权限情况.借此机会,再对接巴西版本的时候讲整个流程再走一遍,将谷歌支付整个流程遇到的一些问题和解决方案做个记录.&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/25481207/error-the-project-id-used-to-call-the-google-play-developer-api-has-not-been-l&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The project id used to call the Google Play Developer API has not been linked in the Google Play Developer Console&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.it1352.com/91830.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Use service account to verify Google InAppPurchase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      关于谷歌支付验证部分,服务端有多种不同语言的SDK.但就PHP版本是Beta版本的,网上关于使用方式讲解并不全面.借此机会,再对接巴西版本的时候讲整个流程再走一遍.
    
    </summary>
    
      <category term="php" scheme="http://blog.terrancy.com/categories/php/"/>
    
    
      <category term="google pay" scheme="http://blog.terrancy.com/tags/google-pay/"/>
    
  </entry>
  
  <entry>
    <title>Laravel5系列入门教程</title>
    <link href="http://blog.terrancy.com/2018/10/16/the-getting-started-tutorial-about-lavarel-1/"/>
    <id>http://blog.terrancy.com/2018/10/16/the-getting-started-tutorial-about-lavarel-1/</id>
    <published>2018-10-16T10:34:48.000Z</published>
    <updated>2018-10-17T12:37:55.604Z</updated>
    
    <content type="html">&lt;p&gt;新手入门学习新的PHP框架Laravel,一款号称为WEB艺术家创造的PHP框架.本文主要介绍在virtualbox环境下结合Vagrant和Headstead安装运行Laravel5.&lt;/p&gt;
&lt;p&gt;Vagrant是一款基于virtual box的虚拟环境,可以安装各种预先配置好的开发环境,达到可以在多种开发环境之间快速切换.&lt;/p&gt;
&lt;p&gt;Homestead是Laravel官方创建的Vagrant盒子,虚拟机的环境搭载Ubuntu16.04 LTS,并且集成了Laravel所需的开发环境及工具,包含最新版本的PHP,Mysql以及Nginx服务器.&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://laravel-china.org/topics/533/laravel-5-series-tutorial-i-the-most-suitable-for-chinese-laravel-tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Laravel 5 系列入门教程（一）【最适合中国人的 Laravel 教程】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.sbot.io/articles/1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Windows 7/8/10 系统下Laravel框架的开发环境安装及部署详解&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://laravel-china.org/index.php/topics/3750/windows-10-install-homestead-card-at-ssh-auth-method-private-key&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Windows 10 安装 Homestead 卡在 SSH auth method: private key&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      新手入门学习新的PHP框架Laravel,一款号称为WEB艺术家创造的PHP框架.
    
    </summary>
    
      <category term="php" scheme="http://blog.terrancy.com/categories/php/"/>
    
    
      <category term="laravel" scheme="http://blog.terrancy.com/tags/laravel/"/>
    
  </entry>
  
  <entry>
    <title>Gitalk - 一款非常极客的评论插件</title>
    <link href="http://blog.terrancy.com/2018/09/28/gitalk-is-a-very-geek-comment-plugin-after-duoshuo/"/>
    <id>http://blog.terrancy.com/2018/09/28/gitalk-is-a-very-geek-comment-plugin-after-duoshuo/</id>
    <published>2018-09-28T10:08:01.000Z</published>
    <updated>2018-09-29T04:19:15.516Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;一提到多说,相信不少博主可能会不假思索的跟你说很多它自带的许多特性以及与博客的无缝接入.除了他的访客功能之外,还提供了很多的自定义样式和描述语,这在这样一个众口难调的时代实在是少见.对于多说的感受,往往有这样的感觉-&lt;strong&gt;失去的时候才懂得珍惜&lt;/strong&gt;.本文在和介绍你如何使用Gitalk之外,从外观上尽量将这款评论插件改成多说差不多的样式.&lt;/p&gt;
&lt;h2 id=&quot;Gitalk的使用&quot;&gt;&lt;a href=&quot;#Gitalk的使用&quot; class=&quot;headerlink&quot; title=&quot;Gitalk的使用&quot;&gt;&lt;/a&gt;Gitalk的使用&lt;/h2&gt;&lt;p&gt;自从多说评论插件在2017年6月宣布停止维护之后,也许会有很多博主会苦于意识找不到合适的评论插件取代它.加之国内其他的评论插件往往需要提供网站备案才允许接入,这无形中也提高了接入门槛.索性,很多的极客爱好者纷纷推出自己的评论插件.比如今天我们即将推荐的一款评论插件Gitalk.&lt;/p&gt;
&lt;h3 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://gitalk.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitalk&lt;/a&gt; 是一款利用GitHub API,基于GitHub issue和preact开发的评论插件.说的直白点,Gitalk实际上是将我们在博客上的评论通过一定的方式上传到GitHub的某个项目的issue上的.就是GitHub的某个项目帮我们托管博客的评论信息.我们的博客可以不必非要托管在GitHub上.刚好博主将自己的静态博客托管在GitHub上.所以说,Gitalk是Github Pages的评论插件神器.&lt;/p&gt;
&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;因为博主这边使用的是hexo的yelee主题,其他主题做法应该也差不多.以下将以yelee主题为例介绍.&lt;/p&gt;
&lt;h4 id=&quot;创建&quot;&gt;&lt;a href=&quot;#创建&quot; class=&quot;headerlink&quot; title=&quot;创建&quot;&gt;&lt;/a&gt;创建&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在Github个人设置下选择&lt;a href=&quot;https://github.com/settings/developers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;开发者设置&lt;/a&gt;,&lt;a href=&quot;https://github.com/settings/applications/new&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;新建&lt;/a&gt;一个开发者授权应用.&lt;/li&gt;
&lt;li&gt;主页地址和回调地址这里统一填写博客主页地址即可,注册成功之后将获取得到相应的Client ID和Client Secret.&lt;/li&gt;
&lt;li&gt;Gitalk将利用这两个参数获取用户的授权,并将评论信息提交到GitHub的项目下.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h4&gt;&lt;p&gt;因为博客之前尝试过国内的其他评论插件,所以在配置的使用一般按照不同的类型通过开关的形式加以调整.&lt;br&gt;&lt;figure class=&quot;highlight yml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;gitalk:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  on:&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  owner:&lt;/span&gt; //GitHub账号用户名&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  repo:&lt;/span&gt; //托管的项目,之后的评论将留在该项目的issue上.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  clientID:&lt;/span&gt; //上一步创建的授权应用获取到的&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  clientSecret:&lt;/span&gt; //同上&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  admin:&lt;/span&gt; //GitHub账号用户名&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;  distractionFreeMode:&lt;/span&gt; //开启无干扰模式&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在主题下的配置文件上按照上面的提示配置好信息之后,就可以在指定需要的地方引用该插件了.&lt;/p&gt;
&lt;h4 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h4&gt;&lt;p&gt;在主题目录下指定目录下(主题yelee专门创建一个统一存放评论页面的文件夹)创建一个gitalk的页面.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;div id=&amp;quot;gitalk-container&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;link rel=&amp;apos;stylesheet&amp;apos; href=&amp;quot;https://unpkg.com/gitalk/dist/gitalk.css&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;link rel=&amp;apos;stylesheet&amp;apos; href=&amp;quot;//blog.terrancy.com/resources/gitalk/comment.css&amp;quot;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;script src=&amp;quot;https://unpkg.com/gitalk/dist/gitalk.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;script src=&amp;quot;https://cdn.staticfile.org/blueimp-md5/2.7.0/js/md5.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    var gitalk = new Gitalk(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      clientID:  &amp;apos;&amp;lt;%=clientID%&amp;gt;&amp;apos;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      clientSecret: &amp;apos;&amp;lt;%=clientSecret%&amp;gt;&amp;apos;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      id: md5(location.pathname),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      repo: &amp;apos;&amp;lt;%=repo%&amp;gt;&amp;apos;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      owner: &amp;apos;&amp;lt;%=owner%&amp;gt;&amp;apos;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      admin: &amp;apos;&amp;lt;%=admin%&amp;gt;&amp;apos;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      distractionFreeMode: &amp;lt;%=distractionFreeMode%&amp;gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    gitalk.render(&amp;apos;gitalk-container&amp;apos;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里面最主要的是引用了两个链接,通过配置文件的相应参数将渲染到gitalk-container这个id的div上.&lt;br&gt;值得注意的是,这里通过配置信息的id参数来区分每个页面信息,官网上要求id赋值在32位以内.这里使用md5加密将长度控制在32位.&lt;br&gt;按照上面的几个步骤操作之后基本上已经可以正常显示了,这里有个小细节就是需要用GitHub账号在这个插件上登入授权即可在GitHub上的指定的项目生成相应的issue.&lt;/p&gt;
&lt;h3 id=&quot;多说化&quot;&gt;&lt;a href=&quot;#多说化&quot; class=&quot;headerlink&quot; title=&quot;多说化&quot;&gt;&lt;/a&gt;多说化&lt;/h3&gt;&lt;p&gt;以上对Gitalk的安装使用已经详细介绍过了,安装之后总体表现算是中规中矩.以下针对一些个人不满意的地方结合多说的自定义样式做些优化.&lt;/p&gt;
&lt;h4 id=&quot;评论高亮&quot;&gt;&lt;a href=&quot;#评论高亮&quot; class=&quot;headerlink&quot; title=&quot;评论高亮&quot;&gt;&lt;/a&gt;评论高亮&lt;/h4&gt;&lt;p&gt;当鼠标光标在评论框时,页面会出现一个带有半透明的浮层并且评论框高亮.这种效果见仁见智,个人感觉不太好看.直接将其去除.就是样式重写覆盖.&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 评论边框 **/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.gt-container&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.gt-comment-admin&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.gt-comment-content&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(255, 255, 255, 0);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; solid &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(0, 0, 0, 0.1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;border-radius&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;5px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.gt-container&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gt-input-focused&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(255, 255, 255, 0);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.gt-container&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gt-input-focused&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::after&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(255, 255, 255, 0);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 预览模式 **/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.gt-container&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.gt-header-preview&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;:&lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(255, 255, 255, 0);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: inherit;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;背景图片&quot;&gt;&lt;a href=&quot;#背景图片&quot; class=&quot;headerlink&quot; title=&quot;背景图片&quot;&gt;&lt;/a&gt;背景图片&lt;/h4&gt;&lt;p&gt;之前在使用多说的时候就曾在评论框内添加背景图片,有种怀旧感.&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** 扑街 **/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#gitalk-container&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.gt-header-comment&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.gt-header-textarea&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;96px&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;(//blog.terrancy.com/resources/duoshuo/pujie.png) right no-repeat;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: inherit;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;图像旋转&quot;&gt;&lt;a href=&quot;#图像旋转&quot; class=&quot;headerlink&quot; title=&quot;图像旋转&quot;&gt;&lt;/a&gt;图像旋转&lt;/h4&gt;&lt;p&gt;鼠标悬浮在头像上时,头像会自动由正方形旋转成圆形.这部分使用之前多说样式.&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;#ds-recent-comments .gt-avatar img &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  width: 54px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  height: 54px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  border-radius: 27px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -webkit-border-radius: 27px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -moz-border-radius: 27px;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  box-shadow: inset 0 -1px 0 #3333sf;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -webkit-box-shadow: inset 0 -1px 0 #3333sf;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -webkit-transition: 0.4s;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -webkit-transition: -webkit-transform 0.4s ease-out;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  transition: transform 0.4s ease-out;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -moz-transition: -moz-transform 0.4s ease-out;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;#ds-recent-comments .gt-avatar img:hover &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  box-shadow: 0 0 10px #fff;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  rgba(255, 255, 255, .6), inset 0 0 20px rgba(255, 255, 255, 1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -webkit-box-shadow: 0 0 10px #fff;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  rgba(255, 255, 255, .6), inset 0 0 20px rgba(255, 255, 255, 1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  transform: rotateZ(360deg);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -webkit-transform: rotateZ(360deg);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -moz-transform: rotateZ(360deg);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;div class=&quot;github-widget&quot; data-repo=&quot;gitalk/gitalk&quot;&gt;&lt;/div&gt;
</content>
    
    <summary type="html">
    
      自从多说评论插件在2017年6月宣布停止维护之后,相信很多博主会苦于意识找不到合适的评论插件取代它.加之国内其他的评论插件往往需要提供网站备案才允许接入,这无形中也提高了接入门槛.索性,很多的极客爱好者纷纷推出自己的评论插件.
    
    </summary>
    
      <category term="javascript" scheme="http://blog.terrancy.com/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://blog.terrancy.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>关于国内域名备案的总结</title>
    <link href="http://blog.terrancy.com/2018/09/20/the-summary-about-the-domestic-domain-filling/"/>
    <id>http://blog.terrancy.com/2018/09/20/the-summary-about-the-domestic-domain-filling/</id>
    <published>2018-09-20T14:07:06.000Z</published>
    <updated>2018-09-29T08:36:47.019Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;  最近发现之前在阿里云上已经备案过的域名居然需要提交备案申请,导致部分域名无法正常使用.经过仔细检查之后原来部分域名使用的是腾讯的服务器.生产线上的产品在毫无征兆的情况下突然间就被显示重新提交备案,直接导致产品立马无法使用.这种算是重大的突发事件,在紧急迁移服务器的同时也加急申请备案.实在无奈~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      最近发现之前在阿里云上已经备案过的域名居然需要提交备案申请,导致部分域名无法正常使用.
    
    </summary>
    
      <category term="DevOps" scheme="http://blog.terrancy.com/categories/DevOps/"/>
    
    
      <category term="domain-filling" scheme="http://blog.terrancy.com/tags/domain-filling/"/>
    
  </entry>
  
  <entry>
    <title>个人面试经历的总结</title>
    <link href="http://blog.terrancy.com/2018/08/20/the-summary-about-personal-interview-experience/"/>
    <id>http://blog.terrancy.com/2018/08/20/the-summary-about-personal-interview-experience/</id>
    <published>2018-08-20T09:07:08.000Z</published>
    <updated>2018-09-02T06:11:54.928Z</updated>
    
    <content type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;关于为什么辞职这里就不多做解释了,现主要对最近个人面试经历的总结.毕业后就呆在一家公司五年了,第一次离职后面临面试这个件事.其实说起来也挺尴尬的,面试了很多人这次也要被面.对职场面试而言,本是一种展示自我的一个很好的机会,但现在反而像新手一样既笨拙又难堪.不过,至少能检验自己的价值以及以及认清自己与他人的差距.以下,就面试过的一些主要公司谈谈自己的看法吧.&lt;/p&gt;
&lt;h3 id=&quot;面试&quot;&gt;&lt;a href=&quot;#面试&quot; class=&quot;headerlink&quot; title=&quot;面试&quot;&gt;&lt;/a&gt;面试&lt;/h3&gt;&lt;h4 id=&quot;点触科技&quot;&gt;&lt;a href=&quot;#点触科技&quot; class=&quot;headerlink&quot; title=&quot;点触科技&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.dianchu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点触科技&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;厦门点触科技股份有限公司(以下以”点触科技”称之),2013年借一款宫廷养成类游戏发展至今的新三板上市公司.&lt;del&gt;(或许是在大家看来的运气的元素,因其特定的用户群体让该公司在之后的发展不断壮大.)&lt;/del&gt;目前的主要研发运营两款游戏,游戏风格大同小异.&lt;/p&gt;
&lt;h5 id=&quot;要求&quot;&gt;&lt;a href=&quot;#要求&quot; class=&quot;headerlink&quot; title=&quot;要求&quot;&gt;&lt;/a&gt;要求&lt;/h5&gt;&lt;p&gt;点触科技要求后端程序员,可以是其他语言转python.因为有几位同事先后进入该公司的缘故,加上福利待遇相对还可以以及跨语言也可以.所以我就抱着试试的心里去面试.&lt;br&gt;因为在之前的游戏公司做的也是后端程序员,加之五年摸爬滚打的工作经验以及对游戏后台的游戏熟悉,这让我在面试中有种莫名的自信.(&lt;del&gt;程序员连这点自信都没有那就白混了.)&lt;/del&gt;&lt;/p&gt;
&lt;h5 id=&quot;过程&quot;&gt;&lt;a href=&quot;#过程&quot; class=&quot;headerlink&quot; title=&quot;过程&quot;&gt;&lt;/a&gt;过程&lt;/h5&gt;&lt;p&gt;在前台的提示下填写了个人信息和个人主要的项目经历.&lt;del&gt;感觉也体现不了什么,反正该有的都写在简历上了&lt;/del&gt;&lt;br&gt;面试主要分为HR面试和技术面试.&lt;br&gt;①HR面试主要是为完善之前填写的那份个人信息表,还有就是了解个人工资问题等等.然后便是技术面试了.&lt;br&gt;②经过与后端程序员的负责人的交流中,逐渐的理清了该公司的后端基础模块.后端程序员大概7-8人的样子,主要负责后台工具模块,运营模块,游戏日志模块,内部员工系统包括Bug反馈系统和人事系统等等.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;后台工具模块.&lt;br&gt;后台日志模块主要为常用的数据分析,游戏基本的用户信息.&lt;br&gt;①前端框架使用&lt;a href=&quot;https://cn.vuejs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vue&lt;/a&gt;+&lt;a href=&quot;http://element-cn.eleme.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Element UI&lt;/a&gt;.对于前端只用过Bootstrap框架的我而言也只是一知半解.这部分后面可以去学学,前端不用学得太多但必须扎实又实用才好.&lt;br&gt;②后端使用&lt;a href=&quot;http://flask.pocoo.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;python-flask&lt;/a&gt;作为日常常用开发框架.最主要的是利用python与hadoop便捷的交互优势,这点是某些编程语言所不具备的.&lt;br&gt;③使用Docker作为应用开发的服务器容器,既方便开发也方面部署.大大的缩短了运维和研发的时间,提升工作效率.&lt;/li&gt;
&lt;li&gt;游戏日志模块.&lt;br&gt;①对外统一游戏日志规范.提供合理的数据BI接口,让游戏服务端根据自定的数据根式将需要的数据提交到游戏日志系统中.&lt;br&gt;②python的并发编程能力.因为游戏内玩家的行为日志相对比较多,对后端服务器的负载也是很大的压力,需要提升数据库的读写速度的同时也发挥python并发的特点.&lt;br&gt;③使用kafka作为常用的消息队列机制.这个可以很大程度上减少服务器端额负载压力.&lt;/li&gt;
&lt;li&gt;运营模块.&lt;br&gt;①常用的运营日志分析统计.比如某个活动对游戏数据的影响,如果能用数据直观的反馈出来对公司的运营也有很好的指导作用.&lt;br&gt;②常用的外围活动或者广告.通过一些简单微信小程序与微信小游戏,促进老玩家对游戏的粘度.通过开发相应的后台,方便运营人员在后台直接给微信小游戏换皮等.大大解放了后端开发人员的生产力.&lt;/li&gt;
&lt;li&gt;其他模块.&lt;br&gt;①开发公司内部OA系统.&lt;br&gt;②上市公司必需的玩家消费日志系统.玩家的虚拟货币分为消费类型和赠送类型.而消费类型的虚拟货币细分为一次性和永久性.需要每个月分析玩家身上的每部分虚拟货币的使用情况.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;面试的结果,不了了之.大数据是个硬伤,也是个门槛.&lt;/strong&gt;&lt;br&gt;首先,因为面试经验的问题,对自我的认识和定位不够清晰以及缺乏临时发挥的反应力导致说话口不遮拦的原因.&lt;br&gt;其次,是个人技术能力.因为之前工作的游戏公司数量比较少,相对就很难遇到在一个比较大量级的情况下产生的问题.&lt;del&gt;(如果想要去一些大公司面试,特别是程序员而言大数据永远是一个绕不过的话题)&lt;/del&gt;同样的数据分析和统计,在大数据环境下产生的读写延迟与冲突导致的数据问题等一无所知.&lt;br&gt;最后,因为实际工作中没有遇到过的问题而导致在面试的减分而甘心让自己的技术停滞不前的想法肯定是不对的.但如何去跨过这样的门槛呢?确实是个值得思考的话题.&lt;/p&gt;
&lt;h4 id=&quot;4399&quot;&gt;&lt;a href=&quot;#4399&quot; class=&quot;headerlink&quot; title=&quot;4399&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.4399.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;4399&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;4399是中国最早的和领先的在线休闲游戏平台,免费为用户提供各种健康绿色的游戏.&lt;/p&gt;
&lt;h5 id=&quot;要求-1&quot;&gt;&lt;a href=&quot;#要求-1&quot; class=&quot;headerlink&quot; title=&quot;要求&quot;&gt;&lt;/a&gt;要求&lt;/h5&gt;&lt;p&gt;前同事内推进去面试,对面试的要求并不太多.面试过程中对方想招的是活动运营开发方向的.&lt;/p&gt;
&lt;h5 id=&quot;过程-1&quot;&gt;&lt;a href=&quot;#过程-1&quot; class=&quot;headerlink&quot; title=&quot;过程&quot;&gt;&lt;/a&gt;过程&lt;/h5&gt;&lt;p&gt;先由前台引导填写基本资料,填完资料之后等待HR通知面试.因为是老员工的内推,面试过程中气氛比较轻松.&lt;br&gt;①4399虽然有自己的研发团队,但整体还是偏向运营方向的.说清楚点就是偏向平台运营,这点很重要.平台类运营侧重于平台活动方向运营,工作的方向也是面向平台推广.&lt;br&gt;②因为对公司的发展方向有所误解,再加上对点触面试经验的总结所以侧重于游戏数据的整理与分析.这个也是面试失败的重要原因&lt;/p&gt;
&lt;h5 id=&quot;总结-1&quot;&gt;&lt;a href=&quot;#总结-1&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h5&gt;&lt;p&gt;①可能是内推的原因吧,整个面试没有笔试过程直接是部门负责人就工作方向和业务方向的咨询.&lt;br&gt;②现阶段工作需求比较少,也不太着急招聘员工.&lt;br&gt;③面试的公司类型很重要,主要分为平台类和研发类的.平台类的要求相对比较轻松,对技术的需求主要偏向运营和配合推广.研发类的侧重于数据整理分析.面试的时候需要多做了解可提高面试通过率.&lt;/p&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/ElemeFE/element&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Element UI&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/sSQlhZdXDgu80OINf3Uu7Q&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;华为人工智能岗位面试经历分享&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      对最近个人面试经历的总结,慎点！
    
    </summary>
    
      <category term="random-thought" scheme="http://blog.terrancy.com/categories/random-thought/"/>
    
    
      <category term="interview" scheme="http://blog.terrancy.com/tags/interview/"/>
    
  </entry>
  
  <entry>
    <title>网易云音乐反爬虫机制</title>
    <link href="http://blog.terrancy.com/2018/08/20/the-case-about-anti-reptile-mechanism-with-netease-music-api/"/>
    <id>http://blog.terrancy.com/2018/08/20/the-case-about-anti-reptile-mechanism-with-netease-music-api/</id>
    <published>2018-08-20T07:06:22.000Z</published>
    <updated>2018-08-20T07:20:10.861Z</updated>
    
    <content type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;之前在搭建个人博客的时候使用了一款异步加载的音乐插件,该插件的服务端部分的主要功能室封装了网易云音乐的接口.确切点说,该服务器服务端实际上是利用网络爬虫的方法抓取网易云音乐的资源.因为网易云音乐反爬虫机制的原因导致音乐插件无法使用.&lt;/p&gt;
&lt;h3 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h3&gt;&lt;p&gt;网易云音乐的资源被爬虫抓取的问题在一定程度是会导致正规平台上的音乐资源被分流了,对于做资源的平台而言无疑就是偷窃.从反制的角度上而言,从入口遏制无疑是省时省力的方案.&lt;/p&gt;
&lt;h3 id=&quot;解决&quot;&gt;&lt;a href=&quot;#解决&quot; class=&quot;headerlink&quot; title=&quot;解决&quot;&gt;&lt;/a&gt;解决&lt;/h3&gt;&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;</content>
    
    <summary type="html">
    
      之前在搭建个人博客的时候使用了一款异步加载的音乐插件,该插件的服务端部分的主要功能室封装了网易云音乐的接口.因为网易云音乐反爬虫机制的原因导致音乐插件无法使用.
    
    </summary>
    
      <category term="crawler" scheme="http://blog.terrancy.com/categories/crawler/"/>
    
    
      <category term="crawler" scheme="http://blog.terrancy.com/tags/crawler/"/>
    
  </entry>
  
  <entry>
    <title>Atom编辑器代理设置</title>
    <link href="http://blog.terrancy.com/2018/08/18/the-problem-of-the-proxy-about-atom/"/>
    <id>http://blog.terrancy.com/2018/08/18/the-problem-of-the-proxy-about-atom/</id>
    <published>2018-08-18T08:46:03.000Z</published>
    <updated>2018-08-18T15:09:31.686Z</updated>
    
    <content type="html">&lt;p&gt;Atom编辑器作为GitHub研发的一款针对开发者的编辑器,以其轻量性一下子就吸引了很多的受众.虽然问题一直存在,但我们期待着它不断的更新和进步.但最近更新的版本之后,打开编辑器之后就马上闪退.后来发现原来是代理的问题,作为习惯使用谷歌搜索的忠实用户,面对鱼和熊掌不可得兼的尴尬确实很头疼.&lt;/p&gt;
&lt;h2 id=&quot;代理冲突&quot;&gt;&lt;a href=&quot;#代理冲突&quot; class=&quot;headerlink&quot; title=&quot;代理冲突&quot;&gt;&lt;/a&gt;代理冲突&lt;/h2&gt;&lt;h3 id=&quot;shadowsock-代理&quot;&gt;&lt;a href=&quot;#shadowsock-代理&quot; class=&quot;headerlink&quot; title=&quot;shadowsock 代理&quot;&gt;&lt;/a&gt;shadowsock 代理&lt;/h3&gt;&lt;p&gt;shadowsocks代理与Atom编辑器冲突导致编辑器闪退,所以需要分别在shadowsocks的代理配置文件和Atom配置文件配置好代理即可;&lt;/p&gt;
&lt;h4 id=&quot;代理配置文件&quot;&gt;&lt;a href=&quot;#代理配置文件&quot; class=&quot;headerlink&quot; title=&quot;代理配置文件&quot;&gt;&lt;/a&gt;代理配置文件&lt;/h4&gt;&lt;p&gt;在电脑右下角小飞机图标中找到代理配置文进PAC,选择编辑本地PAC文件.针对Atom新增记录值 proxy:8080;&lt;br&gt;为防止代理配置文件在同步更新线上文件的时候被覆盖,最好设置保护本地文件选项;&lt;/p&gt;
&lt;h4 id=&quot;编辑器配置文件&quot;&gt;&lt;a href=&quot;#编辑器配置文件&quot; class=&quot;headerlink&quot; title=&quot;编辑器配置文件&quot;&gt;&lt;/a&gt;编辑器配置文件&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;apm config set registry https://registry.npm.taobao.org&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;apm config set strict-ssl false&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;apm config set https-proxy https://proxy:8080&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如上第三步骤,解决代理的问题关键在于设置本地代理.&lt;/p&gt;
&lt;h4 id=&quot;检查测试&quot;&gt;&lt;a href=&quot;#检查测试&quot; class=&quot;headerlink&quot; title=&quot;检查测试&quot;&gt;&lt;/a&gt;检查测试&lt;/h4&gt;&lt;p&gt;查看代理设置是否成功,除了开启代理和编辑器查看是否冲突闪退之外,还是测试下代理配饰是否可用.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;apm config get https-proxy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;apm install --check&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以通过以下命令查看代理是否可用.&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.jianshu.com/p/24cd35cd4b03&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom代理设置&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Atom编辑器作为GitHub研发的一款针对开发者的编辑器,以其轻量性一下子就吸引了很多的受众.虽然问题一直存在,但我们期待着它不断的更新和进步.
    
    </summary>
    
      <category term="IDE" scheme="http://blog.terrancy.com/categories/IDE/"/>
    
    
      <category term="IDE" scheme="http://blog.terrancy.com/tags/IDE/"/>
    
  </entry>
  
  <entry>
    <title>你到底在焦虑什么?</title>
    <link href="http://blog.terrancy.com/2018/07/09/what-are-you-worry-about-with-age/"/>
    <id>http://blog.terrancy.com/2018/07/09/what-are-you-worry-about-with-age/</id>
    <published>2018-07-09T15:07:40.000Z</published>
    <updated>2018-10-20T00:59:22.798Z</updated>
    
    <content type="html">&lt;h2 id=&quot;人生就是一直在自我抗争&quot;&gt;&lt;a href=&quot;#人生就是一直在自我抗争&quot; class=&quot;headerlink&quot; title=&quot;人生就是一直在自我抗争&quot;&gt;&lt;/a&gt;人生就是一直在自我抗争&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;你哪里是在焦虑年纪,你是在焦虑能力&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;或许中国人骨子里对数字特别敏感,尤其涉及到年纪.它不仅像树的年轮一样记录着人的一生,更像每个人应该迈过的一道道坎.二十岁,三十岁这样年纪的人多少会有些焦虑.虽然这些数字仅仅表示一个人生命成长的数字,但是让我们焦虑的其实还是没能在这个或者那个年龄做该做的事情,心里多少有些恐慌或者遗憾.&lt;/p&gt;
&lt;h2 id=&quot;保持良好生活习惯和乐观心态&quot;&gt;&lt;a href=&quot;#保持良好生活习惯和乐观心态&quot; class=&quot;headerlink&quot; title=&quot;保持良好生活习惯和乐观心态&quot;&gt;&lt;/a&gt;保持良好生活习惯和乐观心态&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;唯有通过自我反思与总结,不断明确生活的航向&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;失败并不可怕,我们需要重拾信心及时纠正,查缺补漏.只有看到能力的欠缺并努力地去提升,我们才有可能在以后的道路上满血复活.&lt;/p&gt;
&lt;p&gt;报名考驾照硬是拖了一年才抽出时间考了科目二还是考挂了,其实平时练得挺多了就是考试的时候太不当回事了.好歹等到科目二过了练完一周的科目三还是考挂了,这次是真的练蒙圈了.愣是等了2个月重新再考就轻车熟路了,科目四考完就马上拿到了驾照.其实考驾照,开车技能很重要,临场应变能力更重要,特别是心态上不能太紧张.开车要放松下来才不会那么累.&lt;/p&gt;
&lt;p&gt;考驾照的同时也重新准备专业考证,准备的是信息系统管理师证,属于高级工程师职称.因为之前裸考了几次有过经验,这次不敢大意就直接报班了.慢慢对自己的工作有了新的期待,正在备考PMP.&lt;/p&gt;
&lt;h2 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h2&gt;&lt;p&gt;发现自己的不足，弥补能力的欠缺，沿着自己认为正确的方向，在沿途经过的每个加油站将油箱加满，你才有可能驶向自己想要抵达的终点.&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://weibo.com/ttarticle/p/show?id=2309404260003245634395#_0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;你哪里是焦虑年纪，你是在焦虑能力&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      你哪里是在焦虑年纪,你是在焦虑能力
    
    </summary>
    
      <category term="random-thought" scheme="http://blog.terrancy.com/categories/random-thought/"/>
    
    
      <category term="life" scheme="http://blog.terrancy.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>辞职前后的随想笔记</title>
    <link href="http://blog.terrancy.com/2018/06/06/the-random-thoughts-about-duration-of-the-resignation/"/>
    <id>http://blog.terrancy.com/2018/06/06/the-random-thoughts-about-duration-of-the-resignation/</id>
    <published>2018-06-06T14:41:33.000Z</published>
    <updated>2018-06-06T15:10:15.372Z</updated>
    
    <content type="html">&lt;h2 id=&quot;或许这是件傻事&quot;&gt;&lt;a href=&quot;#或许这是件傻事&quot; class=&quot;headerlink&quot; title=&quot;或许这是件傻事&quot;&gt;&lt;/a&gt;或许这是件傻事&lt;/h2&gt;&lt;p&gt;过年的时候有跟家人提及个人离职的意愿,家人和亲戚的想法其实就是让我先找好工作再离职,不要犯傻裸辞.&lt;br&gt;没想到年后发生的事情实在也让人猝不及防,公司面临着濒临倒闭的窘境.出于感情因素,不想在公司困难的时候离开,还是勉强坚持了一阵子.毕竟待在这边呆了足足5年,而在这5年里大部分是在加班中度过,为此还发过牢骚抱怨过.同时足够时间也给予我无数次的尝试,积累了丰富的工作经验.&lt;br&gt;看着曾经同甘共苦的同事一个个纷纷离开的时候,既有不舍也有祝福.离开是一种解脱,留着反倒是一种煎熬.因为留下来的什么都没法改,也不敢改.就生怕会拆东墙补西墙一样不小心就踩到了雷区.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      经过一段时间的思考,还是决定离开.满怀的不甘与愤懑,匆匆的提上辞呈.或许,太多的犹豫不决反而是种阻碍.
    
    </summary>
    
      <category term="random-thought" scheme="http://blog.terrancy.com/categories/random-thought/"/>
    
    
      <category term="resignation" scheme="http://blog.terrancy.com/tags/resignation/"/>
    
  </entry>
  
  <entry>
    <title>电报机器人</title>
    <link href="http://blog.terrancy.com/2018/05/12/the-rotbot-with-telegram/"/>
    <id>http://blog.terrancy.com/2018/05/12/the-rotbot-with-telegram/</id>
    <published>2018-05-12T15:13:10.000Z</published>
    <updated>2018-05-15T00:06:20.000Z</updated>
    
    <content type="html">&lt;p&gt;以前在QQ群上和机器人小新聊过天,感觉挺好玩的.最近发现电报群上也有机器人,看着API也不难就尝试着动手弄个聊天机器人.&lt;/p&gt;
&lt;h2 id=&quot;机器人&quot;&gt;&lt;a href=&quot;#机器人&quot; class=&quot;headerlink&quot; title=&quot;机器人&quot;&gt;&lt;/a&gt;机器人&lt;/h2&gt;&lt;p&gt;按照机器人的功能特点,以下主要分为群聊机器人和警报机器人.&lt;/p&gt;
&lt;h3 id=&quot;群聊机器人&quot;&gt;&lt;a href=&quot;#群聊机器人&quot; class=&quot;headerlink&quot; title=&quot;群聊机器人&quot;&gt;&lt;/a&gt;群聊机器人&lt;/h3&gt;&lt;p&gt;群聊机器人是放在电报的群主里面,主要对群成员对机器人的某些对话给予相应的回答.而警报机器人只能与管理员对话.这是两者最大的异同点.&lt;/p&gt;
&lt;h3 id=&quot;警报机器人&quot;&gt;&lt;a href=&quot;#警报机器人&quot; class=&quot;headerlink&quot; title=&quot;警报机器人&quot;&gt;&lt;/a&gt;警报机器人&lt;/h3&gt;&lt;p&gt;警报机器人是放在电报的频道上的,在频道中只有管理员可以与警报机器人对话,其他的成员只能通过的订阅该频道来了解频道内的信息.&lt;/p&gt;
&lt;h2 id=&quot;思考&quot;&gt;&lt;a href=&quot;#思考&quot; class=&quot;headerlink&quot; title=&quot;思考&quot;&gt;&lt;/a&gt;思考&lt;/h2&gt;&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/python-telegram-bot/python-telegram-bot&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;python-telegram-bot&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/Naltox/telegram-node-bot&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-telegram-bot&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/U2FsdGVkX1/Tbo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;php-telegram-bot&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://jiasule.v2ex.com/t/436979&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用 telegram bot 创建报警工具&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://51.ruyo.net/8054.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Telegram Bot接管WeChat信息&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      以前在QQ群上和机器人小新聊过天,感觉挺好玩的.最近发现电报群上也有机器人,看着API也不难就尝试着动手弄个聊天机器人.
    
    </summary>
    
      <category term="python" scheme="http://blog.terrancy.com/categories/python/"/>
    
    
      <category term="python" scheme="http://blog.terrancy.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>话说七牛云</title>
    <link href="http://blog.terrancy.com/2017/10/19/the-exprience-about-qiiu-cloud-sdk-integration/"/>
    <id>http://blog.terrancy.com/2017/10/19/the-exprience-about-qiiu-cloud-sdk-integration/</id>
    <published>2017-10-19T15:05:45.000Z</published>
    <updated>2017-10-19T15:15:06.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近忙里偷闲写写小程序,为了让小程序整体的资源压缩到最小,应用内的绝大部分图片资源将使用云存储的方式上传到云端.对比了下阿里云与七牛云,性价比上而言,七牛云比较划算.&lt;/p&gt;
&lt;h2 id=&quot;思考&quot;&gt;&lt;a href=&quot;#思考&quot; class=&quot;headerlink&quot; title=&quot;思考&quot;&gt;&lt;/a&gt;思考&lt;/h2&gt;&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gpake/qiniu-wxapp-sdk&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;基于七牛云API开发的微信小程序SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.qiniu.com/kodo/sdk/1289/nodejs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;七牛云API SDK&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      最近忙里偷闲写写小程序,为了让小程序整体的资源压缩到最小,应用内的绝大部分图片资源将使用云存储的方式上传到云端.对比了下阿里云与七牛云,性价比上而言,七牛云比较划算.
    
    </summary>
    
      <category term="node" scheme="http://blog.terrancy.com/categories/node/"/>
    
    
      <category term="wechat" scheme="http://blog.terrancy.com/tags/wechat/"/>
    
      <category term="cloud storage" scheme="http://blog.terrancy.com/tags/cloud-storage/"/>
    
  </entry>
  
  <entry>
    <title>关于海外支付SDK的集成方案与总结</title>
    <link href="http://blog.terrancy.com/2017/10/18/the-integration-of-the-common-abroad-payment-sdk/"/>
    <id>http://blog.terrancy.com/2017/10/18/the-integration-of-the-common-abroad-payment-sdk/</id>
    <published>2017-10-18T06:09:28.000Z</published>
    <updated>2018-04-03T16:32:34.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;因为业务的需要,公司的游戏不断的向海外拓展.自然地,我们的游戏也要根据当地的需要接入不同的支付方式.其中,最具代表性的,首当其冲的非苹果支付和谷歌支付莫属.但是,除此之外也有其他的支付方式,比如PayPal,Mycard等等.&lt;/p&gt;
&lt;h2 id=&quot;PayPal支付&quot;&gt;&lt;a href=&quot;#PayPal支付&quot; class=&quot;headerlink&quot; title=&quot;PayPal支付&quot;&gt;&lt;/a&gt;PayPal支付&lt;/h2&gt;&lt;p&gt;相对于国外其他的第三方支付,Paypal支付算是一个比较容易上手的第三方支付.Paypal支付移动SDK继承三种方式的支付,如下所示:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a) 接受信用卡和Paypal支付: 开发者能够简单地将Paypal支付和信用卡支付集成到应用中,信用卡支付手动支付和扫码支付.&lt;/li&gt;
&lt;li&gt;b) 未来支付: 一旦客户将Paypal账户授权给开发者的应用中,使用Paypal支付时无需再次登录即可完成付款.&lt;/li&gt;
&lt;li&gt;c) 原生支付: 用户付款时无需重定向到新页面即可完成付款&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;OAuth2协议&quot;&gt;&lt;a href=&quot;#OAuth2协议&quot; class=&quot;headerlink&quot; title=&quot;OAuth2协议&quot;&gt;&lt;/a&gt;OAuth2协议&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1)开发者使用key和secret向Paypal服务器请求token(OAuth2协议).&lt;/li&gt;
&lt;li&gt;2)之后的请求都需要携带token认证完成操作.&lt;/li&gt;
&lt;li&gt;3)用户支付成功之后,服务端需要将利用客户端回传的数据向Paypal发起支付确认.&lt;/li&gt;
&lt;li&gt;4)当token过期失效是重新获取Token.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;获取授权Token&quot;&gt;&lt;a href=&quot;#获取授权Token&quot; class=&quot;headerlink&quot; title=&quot;获取授权Token&quot;&gt;&lt;/a&gt;获取授权Token&lt;/h3&gt;&lt;p&gt;开发者从开发者后台相应的应用上获取client_id和secret.通过这两个秘钥串想服务器请求token.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl -v https://api.sandbox.paypal.com/v1/oauth2/token \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   -H &lt;span class=&quot;string&quot;&gt;&quot;Accept: application/json&quot;&lt;/span&gt; \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   -H &lt;span class=&quot;string&quot;&gt;&quot;Accept-Language: en_US&quot;&lt;/span&gt; \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   -u &lt;span class=&quot;string&quot;&gt;&quot;client_id:secret&quot;&lt;/span&gt; \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;grant_type=client_credentials&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;请求成功之后,响应的参数格式数如下所示:&lt;br&gt;其中, Access-Token 表示获取到token值.expires_in表示该token的过期时间.scope表示授权可请求的权限.&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;scope&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;https://uri.paypal.com/services/subscriptions https://api.paypal.com/v1/payments/.* https://api.paypal.com/v1/vault/credit-card https://uri.paypal.com/services/applications/webhooks openid https://uri.paypal.com/payments/payouts https://api.paypal.com/v1/vault/credit-card/.*&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;nonce&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2017-06-08T18:30:28ZCl54Q_OlDqP6-4D03sDT8wRiHjKrYlb5EH7Di0gRrds&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;Access-Token&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Access-Token&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;token_type&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Bearer&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;app_id&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;APP-80W284485P519543T&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;expires_in&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;32398&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;支付验证&quot;&gt;&lt;a href=&quot;#支付验证&quot; class=&quot;headerlink&quot; title=&quot;支付验证&quot;&gt;&lt;/a&gt;支付验证&lt;/h3&gt;&lt;p&gt;开发者通过将结合用户支付成功之后从客户端回传的参数(订单号)向Paypal服务器指定的API请求支付验证.此时需要在请求头中携带token.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;curl https://api.sandbox.paypal.com/v1/payments/payment/PAY-5YK922393D847794YKER7MUI \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;Content-Type: application/json&quot;&lt;/span&gt; \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;Authorization: Bearer accessToken&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;请求成功之后,响应的参数格式如下所示:&lt;br&gt;其中,environment表示请求的支付环境,分为sandbox(沙盒模式)和正式模式(live).state表示支付状态,approved表示支付验证已通过. 开发者可以通过对响应值携带的相关参数进行二次验证.&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;client&quot;&lt;/span&gt;:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;environment&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;sandbox&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;paypal_sdk_version&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;2.0.0&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;platform&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;iOS&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;product_name&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;PayPal iOS SDK;&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;response&quot;&lt;/span&gt;:&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;create_time&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;2014-02-12T22:29:49Z&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;id&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;PAY-564191241M8701234KL57LXI&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;intent&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;sale&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;state&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;approved&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;attr&quot;&gt;&quot;response_type&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;payment&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Mycard支付&quot;&gt;&lt;a href=&quot;#Mycard支付&quot; class=&quot;headerlink&quot; title=&quot;Mycard支付&quot;&gt;&lt;/a&gt;Mycard支付&lt;/h2&gt;&lt;p&gt;Mycard支付是一个主要面向港澳台地区游戏充值代币平台,它的主要优势在于能够因地适宜的提供适合当地支付方式.按照交易模式来划分,主要分为网页支付和客户端支付两种.而按照付费方式来划分,又可以分为卡片支付、会员扣点交易、小额付款交易.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;申请交易授权码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;研发商在进行所有的相关的交易之前,需要向Mycard服务端申请授权码.当交易模式为Web,付费方式为INGAME,充值服务为Server-side时,此时进入网页版本支付模式.否则就是客户端支付.&lt;/p&gt;
&lt;h3 id=&quot;客户端支付&quot;&gt;&lt;a href=&quot;#客户端支付&quot; class=&quot;headerlink&quot; title=&quot;客户端支付&quot;&gt;&lt;/a&gt;客户端支付&lt;/h3&gt;&lt;h4 id=&quot;支付流程&quot;&gt;&lt;a href=&quot;#支付流程&quot; class=&quot;headerlink&quot; title=&quot;支付流程&quot;&gt;&lt;/a&gt;支付流程&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;客户端通过API向服务端发起请求,由服务端代客户端向Mycard服务端申请相关的授权码.服务端相关的代码如下所示.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getMyCardAuthCode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($arrData)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $arrGetMyCardAuthWhere = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;FacServiceId&quot;&lt;/span&gt;          =&amp;gt;      &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;arrConfigSDK[&lt;span class=&quot;string&quot;&gt;&#39;FacServiceId&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;FacTradeSeq&quot;&lt;/span&gt;          =&amp;gt;      $arrData[&lt;span class=&quot;string&quot;&gt;&#39;FacTradeSeq&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;TradeType&quot;&lt;/span&gt;             =&amp;gt;      &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;arrConfigSDK[&lt;span class=&quot;string&quot;&gt;&#39;TradeType&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;ServerId&quot;&lt;/span&gt;               =&amp;gt;      $arrData[&lt;span class=&quot;string&quot;&gt;&#39;ServerId&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;CustomerId&quot;&lt;/span&gt;          =&amp;gt;     $arrData[&lt;span class=&quot;string&quot;&gt;&#39;CustomerId&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;PaymentType&quot;&lt;/span&gt;        =&amp;gt;     &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;ItemCode&quot;&lt;/span&gt;            =&amp;gt;     &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;ProductName&quot;&lt;/span&gt;        =&amp;gt;     strtolower(urlencode($arrData[&lt;span class=&quot;string&quot;&gt;&#39;ProductName&#39;&lt;/span&gt;])),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;Amount&quot;&lt;/span&gt;              =&amp;gt;     $arrData[&lt;span class=&quot;string&quot;&gt;&#39;Amount&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;Currency&quot;&lt;/span&gt;             =&amp;gt;    strtoupper($arrData[&lt;span class=&quot;string&quot;&gt;&#39;Currency&#39;&lt;/span&gt;]),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;SandBoxMode&quot;&lt;/span&gt;        =&amp;gt;     &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;arrConfigSDK[&lt;span class=&quot;string&quot;&gt;&#39;sandBox&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $signature = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;getPaySign($arrGetMyCardAuthWhere);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $arrGetMyCardAuthWhere[&lt;span class=&quot;string&quot;&gt;&#39;Hash&#39;&lt;/span&gt;] = $signature;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $rootUrlMyCard= &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;arrConfigSDK[&lt;span class=&quot;string&quot;&gt;&#39;sandBox&#39;&lt;/span&gt;] ? &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;::urlMyCardAuthTest : &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;::urlMyCardAuthB2B;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $urlMyCard = $rootUrlMyCard.&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;.urldecode(http_build_query($arrGetMyCardAuthWhere,&lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $arrGetMyCardAuth = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;paySDK-&amp;gt;curlPayByGet($urlMyCard);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;logRequest($urlMyCard.PHP_EOL.$arrGetMyCardAuth);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrGetMyCardAuth) ? &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;() : json_decode($arrGetMyCardAuth,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;客户端获取相应的授权码之后,在SDK内发起支付请求唤起支付界面,再由玩家进行支付操作.&lt;/li&gt;
&lt;li&gt;当玩家在游戏内成功完成交易之后,将申请得到的授权码再回传给我服务端请求发货.&lt;/li&gt;
&lt;li&gt;服务端获取到授权码之后先去验证交易结果,然后再进行请款,最后在请求发货.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getMyCardTradeQuery&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($arrData)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrData[&lt;span class=&quot;string&quot;&gt;&#39;AuthCode&#39;&lt;/span&gt;]))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $arrAuthCode = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;AuthCode&quot;&lt;/span&gt;      =&amp;gt;      $arrData[&lt;span class=&quot;string&quot;&gt;&#39;AuthCode&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $rootUrlMyCard = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;arrConfigSDK[&lt;span class=&quot;string&quot;&gt;&#39;sandBox&#39;&lt;/span&gt;] ?  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;::urlMyCardQueryTest : &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;::urlMyCardQueryB2B;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $urlMyCard = $rootUrlMyCard.&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;.http_build_query($arrAuthCode,&lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $arrGetMyCard = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;paySDK-&amp;gt;curlPayByGet($urlMyCard);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;logRequest($urlMyCard.PHP_EOL.$arrGetMyCard);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $arrRst = &lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrGetMyCard) ? &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;() : json_decode($arrGetMyCard,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrRst) ? &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;() : $arrRst;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getMyCardPaymentConfirm&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($arrData)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrData[&lt;span class=&quot;string&quot;&gt;&#39;AuthCode&#39;&lt;/span&gt;]))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $arrAuthCode = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;AuthCode&quot;&lt;/span&gt;      =&amp;gt;      $arrData[&lt;span class=&quot;string&quot;&gt;&#39;AuthCode&#39;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $rootUrlMyCard = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;arrConfigSDK[&lt;span class=&quot;string&quot;&gt;&#39;sandBox&#39;&lt;/span&gt;] ?  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;::urlMyCardConfirmTest : &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;::urlMyCardConfirmB2B;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $urlMyCard = $rootUrlMyCard.&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;.http_build_query($arrAuthCode,&lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $arrGetMyCard = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;paySDK-&amp;gt;curlPayByGet($urlMyCard);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;logRequest($urlMyCard.PHP_EOL.$arrGetMyCard);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $arrRst = &lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrGetMyCard) ? &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;() : json_decode($arrGetMyCard,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrRst) ? &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;() : $arrRst;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;网页版支付&quot;&gt;&lt;a href=&quot;#网页版支付&quot; class=&quot;headerlink&quot; title=&quot;网页版支付&quot;&gt;&lt;/a&gt;网页版支付&lt;/h3&gt;&lt;p&gt;进入网页版支付模式下,网页支付可分为自定义页面以及官方推荐页面.&lt;/p&gt;
&lt;h4 id=&quot;支付流程-1&quot;&gt;&lt;a href=&quot;#支付流程-1&quot; class=&quot;headerlink&quot; title=&quot;支付流程&quot;&gt;&lt;/a&gt;支付流程&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;玩家选择指定的充值档位之后需要通过Ajax向服务端发起请求,由服务端代网页端向Mycard服务端申请相关的授权码.服务端相关的代码略.&lt;/li&gt;
&lt;li&gt;玩家需要填写支付的点卡信息,网页需要将授权码和相关的点卡信息给服务端先进行验证,再进行请款,最后再请求发货.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getMyCardPayInGamePay&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($arrData)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrData[&lt;span class=&quot;string&quot;&gt;&#39;AuthCode&#39;&lt;/span&gt;]) &amp;amp;&amp;amp; !&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrData[&lt;span class=&quot;string&quot;&gt;&#39;CardID&#39;&lt;/span&gt;]) &amp;amp;&amp;amp; !&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrData[&lt;span class=&quot;string&quot;&gt;&#39;CardPW&#39;&lt;/span&gt;]))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $arrMyCardInGamePayWhere = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;AuthCode&quot;&lt;/span&gt;      =&amp;gt;      $arrData[&lt;span class=&quot;string&quot;&gt;&#39;AuthCode&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;CardID&quot;&lt;/span&gt;      =&amp;gt;      $arrData[&lt;span class=&quot;string&quot;&gt;&#39;CardID&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;CardPW&quot;&lt;/span&gt;      =&amp;gt;      $arrData[&lt;span class=&quot;string&quot;&gt;&#39;CardPW&#39;&lt;/span&gt;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $signature = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;getPaySign($arrMyCardInGamePayWhere);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $arrMyCardInGamePayWhere[&lt;span class=&quot;string&quot;&gt;&#39;Hash&#39;&lt;/span&gt;] = $signature;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $rootUrlMyCard = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;arrConfigSDK[&lt;span class=&quot;string&quot;&gt;&#39;sandBox&#39;&lt;/span&gt;] ?  &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;::urlMyCardInGamePayTest : &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;::urlMyCardInGamePayB2B;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $urlMyCard = $rootUrlMyCard.&lt;span class=&quot;string&quot;&gt;&quot;?&quot;&lt;/span&gt;.http_build_query($arrMyCardInGamePayWhere,&lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $arrGetMyCard = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;paySDK-&amp;gt;curlPayByGet($urlMyCard);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;logRequest($urlMyCard.PHP_EOL.$arrGetMyCard);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $arrRst = &lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrGetMyCard) ? &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;() : json_decode($arrGetMyCard,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($arrRst) ? &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;() : $arrRst;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;思考&quot;&gt;&lt;a href=&quot;#思考&quot; class=&quot;headerlink&quot; title=&quot;思考&quot;&gt;&lt;/a&gt;思考&lt;/h2&gt;&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.paypal.com/docs/api/overview/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Paypal支付-开发者获取令牌环&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.paypal.com/webapps/developer/docs/integration/mobile/verify-mobile-payment/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Paypay支付-信用卡支付&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      因为业务的需要,公司的游戏不断的向海外拓展.自然地,我们的游戏也要根据当地的需要接入不同的支付方式.其中,最具代表性的,首当其冲的非苹果支付和谷歌支付莫属.但是,除此之外也有其他的支付方式,比如PayPal,Mycard等等.
    
    </summary>
    
      <category term="pay" scheme="http://blog.terrancy.com/categories/pay/"/>
    
    
      <category term="pay" scheme="http://blog.terrancy.com/tags/pay/"/>
    
  </entry>
  
  <entry>
    <title>Steam-SDK 接入教程</title>
    <link href="http://blog.terrancy.com/2017/09/30/the-tutorial-about-microclient-with-Steam/"/>
    <id>http://blog.terrancy.com/2017/09/30/the-tutorial-about-microclient-with-Steam/</id>
    <published>2017-09-30T14:32:09.000Z</published>
    <updated>2017-10-11T15:42:08.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;作为Unity3D引擎开发的一款3D枪战类型的游戏,其本身就具备了多端兼容的优势.当游戏在国内外各大手游市场上不断发力的同时,我们也开始尝试在进军微端游戏市场.腾讯游戏平台作为一个集成手游、页游、端游三位于一体的游戏平台,最适合游戏公司甚至独立游戏开发者发布自己游戏.在海外,作为最重要的端游平台,Steam的名气几乎在游戏玩家之间传播着.&lt;/p&gt;
&lt;h2 id=&quot;支付流程&quot;&gt;&lt;a href=&quot;#支付流程&quot; class=&quot;headerlink&quot; title=&quot;支付流程&quot;&gt;&lt;/a&gt;支付流程&lt;/h2&gt;&lt;h3 id=&quot;基本流程&quot;&gt;&lt;a href=&quot;#基本流程&quot; class=&quot;headerlink&quot; title=&quot;基本流程&quot;&gt;&lt;/a&gt;基本流程&lt;/h3&gt;&lt;p&gt;玩家在游戏内购买道具并支付的流程如下,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;①玩家购买指定的道具时,客户端需要向服务端相关参数.&lt;/li&gt;
&lt;li&gt;②服务端按照Steam提供的api发起支付请求.请求成功之后,界面上会自动弹出Stea支付结算界面.&lt;/li&gt;
&lt;li&gt;③如果请求时调用的是沙盒测试环境,可以直接购买该道具.如果是正式环境,玩家余额不足事会引导玩家去充值.&lt;/li&gt;
&lt;li&gt;④玩家玩家支付之后,客户端通过监听Steam响应,并将结果通知服务端.&lt;/li&gt;
&lt;li&gt;⑤服务端将按照Steam提供的api发起结束交易请求.如果支付成功,需要根据订单给玩家发送指定的道具.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;服务端接口&quot;&gt;&lt;a href=&quot;#服务端接口&quot; class=&quot;headerlink&quot; title=&quot;服务端接口&quot;&gt;&lt;/a&gt;服务端接口&lt;/h3&gt;&lt;p&gt;服务端在整个支付流程中主要负责两部分,发起支付与结束交易.当然,其前提必须要有指定的APP的支付权限.&lt;/p&gt;
&lt;h4 id=&quot;获取开发者支付秘钥&quot;&gt;&lt;a href=&quot;#获取开发者支付秘钥&quot; class=&quot;headerlink&quot; title=&quot;获取开发者支付秘钥&quot;&gt;&lt;/a&gt;获取开发者支付秘钥&lt;/h4&gt;&lt;p&gt;获取开发者支付秘钥的前提是当前Steamworks的账号要有管理员权限.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;①选择或者创建一个包含待创建秘钥的与应用的群组.&lt;/li&gt;
&lt;li&gt;②点击该群组查看群组右侧,如果尚未创建秘钥,只要点击「Create Web API Key」选项;否则可直接在右侧查看该群组的秘钥.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;通用接口规范&quot;&gt;&lt;a href=&quot;#通用接口规范&quot; class=&quot;headerlink&quot; title=&quot;通用接口规范&quot;&gt;&lt;/a&gt;通用接口规范&lt;/h4&gt;&lt;p&gt;支付接口分为两部分,分别为&lt;a href=&quot;https://partner.steamgames.com/doc/webapi/ISteamMicroTxn#InitTxn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;发起支付&lt;/a&gt;,&lt;a href=&quot;https://partner.steamgames.com/doc/webapi/ISteamMicroTxn#FinalizeTxn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;介绍交易&lt;/a&gt;.&lt;br&gt;在&lt;a href=&quot;https://partner.steamgames.com/doc/features/microtransactions/implementation#1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;小额交易实现指南&lt;/a&gt;这章中,对支付API的规范有做了说明.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Content-Type should be “application/x-www-form-urlencoded” and the POST parameters should be in the body of the request in standard form urlencoding format. Text should be transmitted as UTF-8.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此,在代码请求的时候需要明确数据格式,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;①请求头里设置好 “application/x-www-form-urlencoded”&lt;/li&gt;
&lt;li&gt;②请求以POST的方式,数据拼接以key1=value1&amp;amp;key2=value2..的形式.&lt;br&gt;具体的代码实现方式如下所示,&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;curlByPay&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;($arrData, $method,$sandbox=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $jsonData = urldecode(http_build_query($arrData,&lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;&quot;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;($method)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;InitTxn&quot;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            $urlPay = $sandbox ? &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;urlInitTxnSandBox : &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;urlInitTxnLive;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;FinalizeTxn&quot;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            $urlPay =$sandbox ? &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;urlFinalizeTxnSandBox : &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;urlFinalizeTxnLive;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            $urlPay  = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $header  = &lt;span class=&quot;keyword&quot;&gt;array&lt;/span&gt;(&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;Content-Type:application/x-www-form-urlencoded&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;Accept: application/json&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;Accept-Language: en_US&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($urlPay))&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//简单的curl&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $ch = curl_init($urlPay);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        curl_setopt($ch, CURLOPT_RETURNTRANSFER, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        curl_setopt($ch, CURLOPT_POST, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        curl_setopt($ch, CURLOPT_POSTFIELDS, $jsonData);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        curl_setopt ($ch, CURLOPT_SSL_VERIFYPEER, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        curl_setopt ($ch, CURLOPT_SSL_VERIFYHOST, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        curl_setopt($ch,CURLOPT_HTTPHEADER,$header);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        $result = curl_exec($ch);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        curl_close($ch);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $result = &lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;($result) ? &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt; : json_encode(json_decode($result,&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; $result;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;发起支付&quot;&gt;&lt;a href=&quot;#发起支付&quot; class=&quot;headerlink&quot; title=&quot;发起支付&quot;&gt;&lt;/a&gt;发起支付&lt;/h4&gt;&lt;p&gt;玩家点击道具购买按钮之后,客户端需要将指定的参数传送到服务端.由服务端负责将相关的数据提交到Steam服务器.一旦数据请求成功,客户端将会弹出指定道具的支付界面.游戏服务端和Steam交互过程中,需要调用发起支付API.&lt;/p&gt;
&lt;p&gt;需要注意的是,该请求涉及到支付,需要使用开发者秘钥,并且该请求最好放在相对安全的服务单,而不是客户端.以下只列举出调用该API必须的参数,&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;key&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Steamworks Web API publisher authentication key.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;orderid&lt;/td&gt;
&lt;td&gt;uint64&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Unique 64-bit ID for order&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;steamid&lt;/td&gt;
&lt;td&gt;uint64&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Steam ID of user making purchase.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;appid&lt;/td&gt;
&lt;td&gt;uint32&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;App ID of game this transaction is for.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;itemcount&lt;/td&gt;
&lt;td&gt;uint32&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Number of items in cart.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;language&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;ISO 639-1 language code of the item descriptions.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;currency&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;ISO 4217 currency code.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;itemid[0]&lt;/td&gt;
&lt;td&gt;uint32&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3rd party ID for item.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;qty[0]&lt;/td&gt;
&lt;td&gt;uint32&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Quantity of this item.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;amount[0]&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Total cost (in cents) of item(s).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;description[0]&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Description of item.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;通过该发起支付的API请求之后,会收到相应的响应.具体的数据形式如下,&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;result&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Result of the operation. (OK or Failure)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;params[‘orderid’]&lt;/td&gt;
&lt;td&gt;uint64&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;ID for order.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;params[‘transid’]&lt;/td&gt;
&lt;td&gt;uint64&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Steam transaction ID.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;params[‘steamurl’]&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Optional URL returned when the usersession input is set to web.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;error[‘errorcode’]&lt;/td&gt;
&lt;td&gt;int32&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Error or event code.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;error[‘errordesc’]&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Message for error or event.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;结束交易&quot;&gt;&lt;a href=&quot;#结束交易&quot; class=&quot;headerlink&quot; title=&quot;结束交易&quot;&gt;&lt;/a&gt;结束交易&lt;/h4&gt;&lt;p&gt;一旦弹出支付结算界面之后,客户端需要开始通过Steam SDK监听玩家支付行为.当玩家完成支付之后,客户端通过SDK收到支付结果.从而判断是否向服务端发起结束交易的行为.&lt;/p&gt;
&lt;h2 id=&quot;思考&quot;&gt;&lt;a href=&quot;#思考&quot; class=&quot;headerlink&quot; title=&quot;思考&quot;&gt;&lt;/a&gt;思考&lt;/h2&gt;&lt;h3 id=&quot;优点&quot;&gt;&lt;a href=&quot;#优点&quot; class=&quot;headerlink&quot; title=&quot;优点&quot;&gt;&lt;/a&gt;优点&lt;/h3&gt;&lt;p&gt;普通秘钥和开发者秘钥的使用的域名是分开的,根据用户使用的频繁度和安全性不同也有不同.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;①普通用户的API是走Akamai的cdn缓存,一方面是保证用户请求的速度,另一方面也减轻服务器的资源负载.&lt;/li&gt;
&lt;li&gt;②开发者秘钥涉及到支付等涉及玩家与商家的隐私信息.一方面使用SSL证书保证数据传输加密,另一方面使用独立的服务器实时数据交互保证数据的准确性.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h3&gt;&lt;p&gt;数据响应不够明确,或者可能是设计的疏忽.&lt;/p&gt;
&lt;p&gt;在请求发起支付的时候,因为客户端的失误传入服务端的Steam ID导致每次请求时提示服务器内部错误.按照正常理解,服务器内部错误应该是服务器本身报错,从而误导开发者.&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://partner.steamgames.com/doc/features/microtransactions/implementation#1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;小额交易实现指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://partner.steamgames.com/doc/webapi_overview/auth&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;获取开发者秘钥&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://steamcommunity.com/app/219640/discussions/0/611702631248143398/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;steam 内部错误&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      关于微端游戏接入Steam开放平台的流程的整理
    
    </summary>
    
      <category term="php" scheme="http://blog.terrancy.com/categories/php/"/>
    
    
      <category term="php" scheme="http://blog.terrancy.com/tags/php/"/>
    
      <category term="Steam" scheme="http://blog.terrancy.com/tags/Steam/"/>
    
  </entry>
  
</feed>
